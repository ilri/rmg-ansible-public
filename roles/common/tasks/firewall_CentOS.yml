---
# Use iptables service on CentOS 6
# Use firewalld on CentOS 7
# Use nftables on CentOS 8

- block:
  - name: Copy /etc/sysconfig/iptables
    when: ansible_distribution_major_version is version('6', '==')
    template: src=iptables.j2 dest=/etc/sysconfig/iptables owner=root mode=0600
    notify:
      - restart iptables

  - name: Copy /etc/sysconfig/ip6tables
    when: ansible_distribution_major_version is version('6', '==')
    template: src=ip6tables.j2 dest=/etc/sysconfig/ip6tables owner=root group=root mode=0600
    notify:
      - restart ip6tables

  - name: Set CentOS firewall packages
    when: ansible_distribution_major_version is version('7', '==')
    set_fact:
      centos_firewall_packages:
        - tidy
        - fail2ban
        - fail2ban-firewalld
        - fail2ban-selinux
        - python-inotify

  - name: Set CentOS firewall packages
    when: ansible_distribution_major_version is version('8', '==')
    set_fact:
      centos_firewall_packages:
        - fail2ban
        - fail2ban-systemd
        - fail2ban-selinux
        - python3-inotify
        - perl-Net-IP # for aggregate-cidr-addresses.pl
        - wget # for updating blocklists

  - name: Install firewall packages
    when: ansible_distribution_major_version is version('7', '>=')
    ansible.builtin.package: name={{ centos_firewall_packages }} state=present
    tags: packages

# 2022-04-09: fail2ban does not currently work with SELinux on CentOS Stream 8:
#
#   SELinux is preventing /usr/libexec/platform-python3.6 from append access on the file fail2ban.pid.
#   SELinux is preventing /usr/libexec/platform-python3.6 from append access on the file fail2ban.log.
#
# See: https://bugzilla.redhat.com/show_bug.cgi?id=2073606
  - name: Check fail2ban SELinux module
    when: ansible_distribution_major_version is version('8', '==')
    ansible.builtin.command: semodule -l
    register: semodule_list

  - block:
    - name: Copy custom fail2ban SELinux policy
      ansible.builtin.copy:
        src: my-fail2banserver.te
        dest: /tmp/my-fail2banserver.te

    - name: Compile custom fail2ban SELinux module
      ansible.builtin.command:
        cmd: checkmodule -M -m -o my-fail2banserver.mod my-fail2banserver.te
        chdir: /tmp
        creates: my-fail2banserver.mod

    - name: Create custom fail2ban SELinux policy module package
      ansible.builtin.command:
        cmd: semodule_package -o my-fail2banserver.pp -m my-fail2banserver.mod
        chdir: /tmp
        creates: my-fail2banserver.pp

    - name: Install custom fail2ban SELinux policy
      ansible.builtin.command:
        cmd: semodule -X 300 -i my-fail2banserver.pp -P
        chdir: /tmp

    - name: Clean up custom fail2ban SELinux policy files
      ansible.builtin.command:
        cmd: rm my-fail2banserver.te my-fail2banserver.mod my-fail2banserver.pp
        chdir: /tmp
    # Note: this `when` is for the entire block of CentOS Stream 8 tasks!
    when:
      - not semodule_list.skipped
      - '"my-fail2banserver" not in semodule_list.stdout_lines'

  - include_tasks: nftables.yml
    when: ansible_distribution_major_version is version('8', '==')

  - name: Copy firewalld public zone file to /etc/firewalld/zones/public.xml
    when: ansible_distribution_major_version is version('7', '==')
    template: src=public.xml.j2 dest=/etc/firewalld/zones/public.xml owner=root mode=0600

  - name: Format public.xml firewalld zone file
    when: ansible_distribution_major_version is version('7', '==')
    command: tidy -xml -iq -m -w 0 /etc/firewalld/zones/public.xml
    notify:
      - restart firewalld
      - restart fail2ban

  - name: Copy ipsets of abusive IPs
    when: ansible_distribution_major_version is version('7', '==')
    copy: src={{ item.src }} dest=/etc/firewalld/ipsets/{{ item.src }} owner=root group=root mode=0600 force={{ item.force }}
    loop:
      - { src: "spamhaus-ipv4.xml", force: "no" }
      - { src: "spamhaus-ipv6.xml", force: "no" }
      - { src: "abusers-ipv4.xml", force: "yes" }
      - { src: "abusers-ipv6.xml", force: "yes" }
    notify:
      - restart firewalld
      - restart fail2ban

  - name: Copy Spamhaus firewalld update script
    when: ansible_distribution_major_version is version('7', '==')
    copy: src=update-spamhaus-lists.sh dest=/usr/local/bin/update-spamhaus-lists.sh mode=0755 owner=root group=root

  - name: Copy Spamhaus firewalld systemd units
    when: ansible_distribution_major_version is version('7', '==')
    copy: src={{ item }} dest=/etc/systemd/system/{{ item }} mode=0644 owner=root group=root
    loop:
        - update-spamhaus-lists.service
        - update-spamhaus-lists.timer
    register: spamhaus_firewalld_systemd_units

  # need to reload to pick up service/timer/environment changes
  - name: Reload systemd daemon
    systemd: daemon_reload=yes
    when: spamhaus_firewalld_systemd_units is changed

  - name: Start and enable Spamhaus firewalld update timer
    when: ansible_distribution_major_version is version('7', '==')
    systemd: name=update-spamhaus-lists.timer state=started enabled=yes
    notify:
      - restart firewalld
      - restart fail2ban

  - include_tasks: fail2ban.yml
    when: ansible_distribution_major_version is version('7', '>=')
  tags: firewall

# vim: set sw=2 ts=2:

---
# Make sure there is a locally resolvable version of the machine's hostname
- name: Add hostname to /etc/hosts
  ansible.builtin.lineinfile:
    path: /etc/hosts
    regexp: ^127.0.1.1\s+{{ ansible_facts["nodename"] }}$
    line: 127.0.1.1 {{ ansible_facts["nodename"] }}
    state: present
  when: "'compute' not in group_names and 'storage' not in group_names"

# storage and compute nodes need to know each other's IP addresses and hostnames
# for yum mirrors, SLURM, LDAP, etc, so just do that first.
- name: Add compute and storage nodes to /etc/hosts (Nairobi)
  ansible.builtin.lineinfile:
    path: /etc/hosts
    regexp: "{{ hostvars[item].ansible_host }}.*{{ item }}.*{{ item }}\\.ilri\\.cgiar\\.org$"
    line: "{{ hostvars[item].ansible_host }} {{ item }} {{ item }}.ilri.cgiar.org"
    state: present
  loop: "{{ groups['nairobi_compute'] | union(groups['storage']) }}"
  when: "'nairobi_compute' in group_names or 'storage' in group_names"

- name: Add compute nodes to /etc/hosts (Addis)
  ansible.builtin.lineinfile:
    path: /etc/hosts
    regexp: "{{ hostvars[item].ansible_host }}.*{{ item }}.*{{ item }}\\.ilri\\.cgiar\\.org$"
    line: "{{ hostvars[item].ansible_host }} {{ item }} {{ item }}.ilri.cgiar.org"
    state: present
  loop: "{{ groups['addis_compute'] }}"
  when: "'addis_compute' in group_names"

# We should clear any existing entries for each name so that we don't end up
# with two (or more) conflicting entries when we start adding new ones with
# different addresses.
- name: Clear static DNS entries in /etc/hosts
  ansible.builtin.lineinfile:
    path: /etc/hosts
    regexp: ^.+\s+{{ item.name }}$
    state: absent
  loop: "{{ static_dns_entries }}"
  when: static_dns_entries is defined

- name: Add static DNS entries to /etc/hosts
  ansible.builtin.lineinfile:
    path: /etc/hosts
    regexp: ^{{ item.address }}\s+{{ item.name }}$
    line: "{{ item.address }} {{ item.name }}"
    state: present
  loop: "{{ static_dns_entries }}"
  when: static_dns_entries is defined

# vim: set sw=2 ts=2:

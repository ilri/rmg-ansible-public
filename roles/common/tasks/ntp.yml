---
# Hosts running Ubuntu >= 16.04 or CentOS >= 7 use the systemd init system and
# should use the built-in systemd-timesync service instead of a standalone NTP
# client, while earlier versions of those distributions should use the Chrony
# package.
#
# Sadly, CentOS 7 ships with systemd 219 and for some reason systemd-timesyncd
# is not bundled there (either by upstream or Redhat, I'm not sure).
#
# See: https://www.centos.org/forums/viewtopic.php?t=54021
#
# Sadly, CentOS 8 ships with system 239 and for some reason systemd-timesysncd
# is not bundled there either. According to Red Hat's RHEL8 documentation NTP
# is provided by chrony.
#
# See: https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/configuring_basic_system_settings/using-chrony-to-configure-ntp

- name: Set timezone
  when: timezone is defined and ansible_service_mgr == 'systemd'
  command: /usr/bin/timedatectl set-timezone {{ timezone }}
  tags: timezone

- name: Enable systemd's NTP client
  when: ansible_service_mgr == 'systemd' and ansible_distribution != 'CentOS'
  systemd: name=systemd-timesyncd state=started enabled=true

- name: Uninstall ntp on modern Ubuntu/Debian
  ansible.builtin.package: name=ntp state=absent cache_valid_time=3600
  when: ansible_os_family == 'Debian' and ansible_service_mgr == 'systemd'

- name: Install ntp on old Ubuntu/Debian
  ansible.builtin.package: name=ntp state=present cache_valid_time=3600
  when: ansible_os_family == 'Debian' and ansible_service_mgr != 'systemd'

# 2018-02-19: Make sure ntp is stopped and removed from CentOS machines before
# installing chrony (just in case). Chrony is now preferred in favor of ntp:
# https://www.coreinfrastructure.org/news/blogs/2017/09/securing-network-time
- name: Stop and disable ntp on CentOS
  systemd: name=ntpd state=stopped enabled=false
  when: ansible_distribution == 'CentOS' and ansible_service_mgr == 'systemd'
  ignore_errors: true

- name: Uninstall ntp on CentOS
  ansible.builtin.package: name=ntp state=absent
  when: ansible_distribution == 'CentOS'

- name: Install chrony on CentOS
  ansible.builtin.package: name=chrony state=present
  when: ansible_distribution == 'CentOS'

- name: Start and enable chrony on CentOS
  service: name=chronyd state=started enabled=true
  when: ansible_distribution == 'CentOS'

# vim: set ts=2 sw=2:

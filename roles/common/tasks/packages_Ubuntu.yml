---
- name: Configure Ubuntu packages
  tags: packages
  block:
    # Create directory for third-party package signing keys. Required on distros
    # older than Debian 12 / Ubuntu 22.04.
    #
    # See: https://wiki.debian.org/DebianRepository/UseThirdParty
    - name: Create /etc/apt/keyrings
      ansible.builtin.file:
        path: /etc/apt/keyrings
        mode: "0755"
        owner: root
        group: root
        state: directory
      when: ansible_distribution_major_version is version('22.04', '<')

    - name: Configure apt mirror in sources.list
      when: ansible_distribution_version is version('24.04', '<')
      ansible.builtin.template:
        src: sources.list.j2
        dest: /etc/apt/sources.list
        owner: root
        group: root
        mode: "0644"
      register: ubuntu_apt_mirror

    - name: Configure apt mirror in ubuntu.sources
      when: ansible_distribution_version is version('24.04', '>=')
      ansible.builtin.template:
        src: etc/apt/sources.list.d/ubuntu.sources.j2
        dest: /etc/apt/sources.list.d/ubuntu.sources
        owner: root
        group: root
        mode: "0644"
      register: ubuntu_apt_mirror

    - name: Update apt cache
      ansible.builtin.package:
        update_cache: true
      when:
        - ubuntu_apt_mirror is defined
        - ubuntu_apt_mirror is changed

    - name: Upgrade base OS
      ansible.builtin.package:
        upgrade: dist
        cache_valid_time: 3600

    - name: Install base packages
      ansible.builtin.package:
        name:
          - git
          - tmux
          - iotop
          - htop
          - strace
          - s3cmd
          - safe-rm
          - debian-goodies
          - mosh
          - python3-pycurl # for ansible's apt_repository
          - vim
          - acpid
          - debconf
          - debconf-utils
          - software-properties-common
          - zstd
          - debian-keyring # recommended for third-party repositories
          - debian-archive-keyring # recommended for third-party repositories
          - apt-transport-https # recommended for third-party repositories
          - ubuntu-keyring # recommended for third-party repositories
        state: present
        cache_valid_time: 3600

    # See: https://wiki.ubuntu.com/Kernel/LTSEnablementStack
    - name: Install LTS kernel
      ansible.builtin.include_tasks: kernel_Ubuntu.yml
      when:
        ansible_distribution_version is version('18.04', '==') or
        ansible_distribution_version is version('20.04', '==') or
        ansible_distribution_version is version('22.04', '==') or
        ansible_distribution_version is version('24.04', '==')

    # Gather package facts so we can check if snap is installed
    - name: Gather package facts
      ansible.builtin.package_facts:
        manager: auto

    # We have to remove snaps one by one in a specific order because some depend
    # on others. Only after that can we remove the corresponding system packages.
    - name: Remove lxd snap
      community.general.snap:
        name: lxd
        state: absent
      when:
        - "'snapd' in ansible_facts.packages"
        - ansible_distribution_version is version('20.04', '>=')

    - name: Remove core18 snap
      community.general.snap:
        name: core18
        state: absent
      when:
        - "'snapd' in ansible_facts.packages"
        - ansible_distribution_version is version('20.04', '==')

    - name: Remove core20 snap
      community.general.snap:
        name: core20
        state: absent
      when:
        - "'snapd' in ansible_facts.packages"
        - ansible_distribution_version is version('20.04', '>=')

    - name: Remove snapd snap
      community.general.snap:
        name: snapd
        state: absent
      when:
        - "'snapd' in ansible_facts.packages"
        - ansible_distribution_version is version('20.04', '>=')

    - name: Remove annoying packages
      ansible.builtin.package:
        name:
          - whoopsie # security (CIS 4.1)
          - apport # security (CIS 4.1)
          - command-not-found # annoying
          - command-not-found-data # annoying
          - python3-commandnotfound # annoying
          - snapd # annoying (Ubuntu >= 16.04)
          - lxd # annoying (Ubuntu >= 16.04)
          - lxd-client # annoying (Ubuntu >= 16.04)
          - liblxc1 # annoying (Ubuntu >= 16.04)
          - lxc-common # annoying (Ubuntu >= 16.04)
          - lxcfs # annoying (Ubuntu >= 16.04)
        state: absent
        purge: true
      when: ansible_distribution_version is version('18.04', '<=')

    - name: Remove packages (Ubuntu 20.04+)
      ansible.builtin.package:
        name:
          - whoopsie # security (CIS 4.1)
          - apport # security (CIS 4.1)
          - command-not-found # annoying
          - command-not-found-data # annoying
          - python3-commandnotfound # annoying
          - snapd # annoying (Ubuntu >= 16.04)
          - lxd-agent-loader # annoying (Ubuntu 20.04)
        state: absent
        purge: true
      when: ansible_distribution_version is version('20.04', '>=')

    - name: Remove unneeded packages on VM guests
      ansible.builtin.package:
        name:
          - irqbalance
          - linux-firmware
          - thermald
        state: absent
        purge: true
      when: (ansible_virtualization_role == 'guest' or "linode" in inventory_hostname)

    - name: Disable annoying Canonical spam in MOTD
      ansible.builtin.file: # noqa ignore-errors
        path: "{{ item }}"
        mode: "0644"
      loop:
        - /etc/update-motd.d/99-esm # Ubuntu 14.04
        - /etc/update-motd.d/10-help-text # Ubuntu 14.04+
        - /etc/update-motd.d/50-motd-news # Ubuntu 16.04+
        - /etc/update-motd.d/80-esm # Ubuntu 16.04+
        - /etc/update-motd.d/88-esm-announce # Ubuntu 18.04+
        - /etc/update-motd.d/80-livepatch # Ubuntu 18.04+
      ignore_errors: true

    - name: Disable annoying Canonical spam in MOTD
      ansible.builtin.systemd_service:
        name: "{{ item }}"
        state: stopped
        enabled: false
        masked: true
      when: ansible_service_mgr == 'systemd'
      loop:
        - motd-news.service
        - motd-news.timer

    - name: Configure unattended-upgrades
      ansible.builtin.import_tasks: unattended-upgrades.yml

    - name: Configure cron-apt
      ansible.builtin.import_tasks: cron-apt.yml
      tags: cron-apt

# vim: set ts=2 sw=2:

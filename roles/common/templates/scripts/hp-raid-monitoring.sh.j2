#!/bin/bash
#
# hp-raid-monitoring.sh: Checks phsyical devices in all slots to look for drives
# which aren't "OK" and sends an email to the storage admins if it finds any.
#
# Inspired by:
#   - http://www.adminsehow.com/2014/07/send-email-alerts-when-hp-proliant-raid-fails-in-linux/
#   - https://calomel.org/megacli_lsi_commands.html

HP_CLI_BIN=/usr/sbin/ssacli

# admin email(s)
EMAIL="{{ sysadmin_emails|join(" ") }}"

{% if ansible_distribution == 'Ubuntu' and ansible_distribution_version is version('18.04', '>=') %}
BIN_MAIL="/usr/bin/s-nail"
{% elif ansible_distribution == 'CentOS' %}
BIN_MAIL="/usr/bin/mailx"
{% endif %}

# extra mail options -> mailrc
MAIL_ARGS='-S from={{ mailrc_from_email }} -S smtp={{ mailrc_smtp_server }} -S smtp-use-starttls -S smtp-auth=login -S smtp-auth-user={{ mailrc_auth_user }} -S smtp-auth-password={{ mailrc_auth_pass }}'

{% if ansible_distribution == 'CentOS' %}
MAIL_ARGS="${MAIL_ARGS} -S nss-config-dir=/etc/pki/nssdb -S ssl-verify=ignore"
{% endif %}

# get slots on this machine's HP storage
SLOTS=$($HP_CLI_BIN controller all show | grep -oE 'Slot [0-9]{0,2}' | awk '{print $2}')

function checkPhysicalDisks () {
    # check for physical disk status (ignoring lines beginning with error, like
    # when the slot has no disks)
    slot=$1
    result=$($HP_CLI_BIN ctrl slot=$slot pd all show | grep -v '^Error: ' | grep physicaldrive | grep -v OK | wc -l)

    if [[ $result > 0 ]]; then
        $HP_CLI_BIN ctrl slot=$slot pd all show | ${BIN_MAIL} ${MAIL_ARGS} -s `hostname`" (slot$slot) - RAID Notification" $EMAIL
    fi
}

for slot in $SLOTS; do
    checkPhysicalDisks $slot
done

# test if email is working
if [[ $1 == 'test' ]]; then
    $HP_CLI_BIN ctrl slot=$slot pd all show | ${BIN_MAIL} ${MAIL_ARGS} -s `hostname`" (slot$slot) - RAID Notification" $EMAIL
fi

# vim: set ts=4 sw=4:

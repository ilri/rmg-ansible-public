#!/usr/bin/env bash

# Location of ILRI module files
export MODULEPATH=/etc/modulefiles/ilri

# Do not load modules without a version. Only works on CentOS Stream 8.
# See: https://modules.readthedocs.io/en/latest/module.html#envvar-MODULES_IMPLICIT_DEFAULT=
export MODULES_IMPLICIT_DEFAULT=0

# adjust squeue output to reduce left padding and show longer job names and CPUs
export SQUEUE_FORMAT="%.7i %.9P %.18j %.8u %.2t %.10M %.6C %R"
# adjust sacct output to show more information
export SACCT_FORMAT="JobID,JobName,User,Account,State,CPUTime,AllocCPUs,Partition,NodeList%-30"

# Temporary directory to build the squashfs filesystem (default is /tmp). We
# don't want users to fill up /tmp and crash SLURM!
export APPTAINER_TMPDIR=/var/scratch/$USER

# Signal to programs that support this that we do not want them to use /tmp for
# temporary data. bcftools sort supports this since v1.15 for example.
export TMPDIR=/var/scratch

{% if inventory_hostname == 'hpc' %}
# only run on interactive sessions
TTY=$(tty -s)

# Generate SSH keys for keyless logins! (ripped from Rocks 5.4)
# If we are interactive and don't have a public key, send prompt.
if [[ $INTERACTIVE != "false" ]] && [[ ! -f $HOME/.ssh/id_ed25519.pub ]]
then
    echo
    echo "It doesn't appear that you have set up your ssh key."
    echo "This process will make the files:"
    echo "    " $HOME/.ssh/id_ed25519.pub
    echo "    " $HOME/.ssh/id_ed25519
    echo "    " $HOME/.ssh/authorized_keys
    echo

    # generate a key automatically, without prompting for a filename/password
    ssh-keygen -t ed25519 -f $HOME/.ssh/id_ed25519 -N ''

    cat $HOME/.ssh/id_ed25519.pub >> $HOME/.ssh/authorized_keys

    chmod 600 $HOME/.ssh/authorized_keys
    chmod g-w $HOME
fi

# Load ILRI-specific scripts and tools
module load ilri/latest

# Configure paths for NVIDIA utilities and libraries.
# See: https://docs.nvidia.com/cuda/cuda-installation-guide-linux/index.html#post-installation-actions
export PATH=/usr/local/cuda-12.1/bin${PATH:+:${PATH}}
export LD_LIBRARY_PATH=/usr/local/cuda-12.1/lib64${LD_LIBRARY_PATH:+:${LD_LIBRARY_PATH}}
{% endif %}

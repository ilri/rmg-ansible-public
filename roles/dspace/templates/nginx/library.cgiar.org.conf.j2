# Handle old CGIAR Library URLs
# ... check Google for "inurl:library.cgiar.org"
#
server {
    listen 80;
    listen [::]:80;

    server_name library.cgiar.org;

    # log access requests to this legacy domain, even though all should be
    # redirected to cgspace.cgiar.org with HTTP 301.
    access_log /var/log/nginx/library-access.log;

    # Translate top-level CGIAR Library requests to their community on {{ nginx_server_name }}
    # test: http://library.cgiar.org
    location = / {
        return {{ nginx_redirect_type }} https://{{ nginx_server_name }}/handle/10568/83389;
    }

    # Translate bitstream links from library.cgiar.org to {{ nginx_server_name }}
    # test: http://library.cgiar.org/bitstream/handle/10947/2699/CGIAR_Branding_Guidelines_and_Toolkit.pdf
    location ~ ^/bitstream {
        # ? in rewrite makes sure nginx doesn't append query string again
        # see: http://wiki.nginx.org/NginxHttpRewriteModule#rewrite
        rewrite ^ https://{{ nginx_server_name }}$request_uri? {% if nginx_redirect_type == 301 %}permanent{% else %}redirect{% endif %};
    }

    # Handle all other legacy variants of http://library.cgiar.org/*
    # test: http://library.cgiar.org/sitemap
    # test: http://library.cgiar.org/password-login
    # test: http://library.cgiar.org/handle/10947/4258
    location / {
        # ? in rewrite makes sure nginx doesn't append query string again
        # see: http://wiki.nginx.org/NginxHttpRewriteModule#rewrite
        rewrite ^ https://{{ nginx_server_name }}$request_uri? {% if nginx_redirect_type == 301 %}permanent{% else %}redirect{% endif %};
    }

    include extra-security.conf;
}

# HTTPS vhost for CGIAR Library, needs to handle the same redirects
# as the non-HTTPS vhost above, but on HTTPS.
server {
    listen {{ nginx_ssl_port }} ssl;
    listen [::]:{{ nginx_ssl_port }} ssl;
    http2 on;

    server_name library.cgiar.org;

    # log access requests to this legacy domain, even though all should be
    # redirected to cgspace.cgiar.org with HTTP 301.
    access_log /var/log/nginx/library-access.log;

    ssl_certificate /etc/letsencrypt/live/library.cgiar.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/library.cgiar.org/privkey.pem;

    include /etc/nginx/intermediate-tls.conf;

    # Translate top-level CGIAR Library requests to their community on {{ nginx_server_name }}
    # test: https://library.cgiar.org
    location = / {
        return {{ nginx_redirect_type }} https://{{ nginx_server_name }}/handle/10568/83389;
    }

    # Translate bitstream links from library.cgiar.org to {{ nginx_server_name }}
    # test: https://library.cgiar.org/bitstream/handle/10947/2699/CGIAR_Branding_Guidelines_and_Toolkit.pdf
    location ~ ^/bitstream {
        # ? in rewrite makes sure nginx doesn't append query string again
        # see: http://wiki.nginx.org/NginxHttpRewriteModule#rewrite
        rewrite ^ https://{{ nginx_server_name }}$request_uri? {% if nginx_redirect_type == 301 %}permanent{% else %}redirect{% endif %};
    }

    # Handle all other legacy variants of http://library.cgiar.org/*
    # test: https://library.cgiar.org/sitemap
    # test: https://library.cgiar.org/password-login
    # test: https://library.cgiar.org/handle/10947/4258
    location / {
        # ? in rewrite makes sure nginx doesn't append query string again
        # see: http://wiki.nginx.org/NginxHttpRewriteModule#rewrite
        rewrite ^ https://{{ nginx_server_name }}$request_uri? {% if nginx_redirect_type == 301 %}permanent{% else %}redirect{% endif %};
    }

    include extra-security.conf;
}

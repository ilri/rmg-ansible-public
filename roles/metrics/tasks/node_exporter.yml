---
# file: roles/metrics/tasks/node_exporter.yml
#

- name: Check node_exporter version
  ansible.builtin.stat:
    path: "/usr/local/bin/{{ node_exporter_tarball }}"
  register: node_exporter_stat

- name: Download node_exporter
  ansible.builtin.get_url:
    url: "{{ node_exporter_url }}"
    dest: "/usr/local/bin/{{ node_exporter_tarball }}"
    checksum: "sha256:{{ node_exporter_url_checksum }}"
    mode: 0640
  register: node_exporter_download
  when: not node_exporter_stat.stat.exists

# Unzip the tarball and extract only the node_exporter file
- name: Unzip node_exporter
  ansible.builtin.unarchive:
    src: "/usr/local/bin/{{ node_exporter_tarball }}"
    remote_src: true
    dest: /usr/local/bin
    extra_opts:
      - --strip-components
      - 1
      - "{{ node_exporter_tarball | replace('.tar.gz', '') }}/node_exporter"
  when:
    - node_exporter_download.status_code is defined
    - node_exporter_download.status_code == 200
  notify:
    - restart node-exporter

- name: Remove old node_exporter tarballs
  ansible.builtin.file:
    path: "{{ item }}"
    state: absent
  loop:
    - "/usr/local/bin/node_exporter-1.3.0.linux-amd64.tar.gz"

- name: Configure node-exporter systemd service
  ansible.builtin.template:
    src: etc/systemd/system/node-exporter.service.j2
    dest: /etc/systemd/system/node-exporter.service
    owner: root
    group: root
    mode: 0644
  notify:
    - reload systemd
    - restart node-exporter

- name: Flush handlers
  ansible.builtin.meta: flush_handlers

- name: Start and enable node-exporter
  ansible.builtin.systemd:
    name: node-exporter.service
    state: started
    enabled: true

# vim: set sw=2 ts=2:

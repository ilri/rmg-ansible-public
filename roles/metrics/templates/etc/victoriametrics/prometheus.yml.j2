global:
  scrape_interval: 15s

scrape_configs:
- job_name: node
  static_configs:
  - targets: ['127.0.0.1:9100']
  relabel_configs:
  - source_labels: [instance]
    regex: '.*'
    target_label: instance
    replacement: '{{ inventory_hostname }}'
{% if extra_victoriametrics_exporters is defined %}
{%   if 'mysqld' in extra_victoriametrics_exporters %}
- job_name: mysqld
  static_configs:
  - targets: ['127.0.0.1:9104']
  relabel_configs:
  - source_labels: [instance]
    regex: '.*'
    target_label: instance
    replacement: '{{ inventory_hostname }}'
{%   endif %}
{%   if 'postgres' in extra_victoriametrics_exporters %}
- job_name: postgres
  static_configs:
  - targets: ['127.0.0.1:9187']
  relabel_configs:
  - source_labels: [instance]
    regex: '.*'
    target_label: instance
    replacement: '{{ inventory_hostname }}'
{%   endif %}
{% endif %}
{% if "dspace" in group_names %}
- job_name: jvm_tomcat
  static_configs:
  - targets: ['127.0.0.1:9180']
  relabel_configs:
  - source_labels: [instance]
    regex: '.*'
    target_label: instance
    replacement: '{{ inventory_hostname }}'
# Since the default Solr Grafana dashboard doesn't use instance, we can abuse
# the base_url to identify the host because there is only one Solr per host.
- job_name: 'solr'
  static_configs:
  - targets: ['127.0.0.1:9854']
  relabel_configs:
  - source_labels: [instance]
    regex: '.*'
    target_label: instance
    replacement: '{{ inventory_hostname }}'
  - source_labels: [base_url]
    regex: '.*'
    target_label: base_url
    replacement: '{{ inventory_hostname }}'
{% endif %}

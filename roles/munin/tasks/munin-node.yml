---
- name: Install munin-node
  ansible.builtin.package:
    name: munin-node
    state: present
  tags: packages

# Enable sensors support if this is a bare metal machine. The way we check this
# is to consult ansible_virtualization_role, which always returns "host" if the
# host is bare metal.
- name: Install sensor packages (Red Hat)
  ansible.builtin.package:
    name:
      - lm_sensors # for CPU package and PCI card temperatures
      - hddtemp    # for hard drive temperatures
    state: present
  when:
    - ansible_virtualization_role == "host"
    - ansible_os_family == "RedHat"
  tags: packages

- name: Install sensor packages (Debian)
  ansible.builtin.package:
    name:
      - lm-sensors
    state: present
  when:
    - ansible_virtualization_role == "host"
    - ansible_os_family == "Debian"
  tags: packages

- name: Enable Munin temperature and fan plugins
  ansible.builtin.file:
    src: /usr/share/munin/plugins/sensors_
    dest: "{{ item }}"
    state: link
  loop:
    - /etc/munin/plugins/sensors_fan
    - /etc/munin/plugins/sensors_temp
  when: ansible_virtualization_role == "host"

# some nice things to have for munin-node on Ubuntu (12.04 and 14.04 right now)
# libwww-perl for munin's nginx_status check
- name: Install munin-node deps
  ansible.builtin.package:
    name: libwww-perl
    state: present
  when: ansible_distribution == "Ubuntu"
  tags: packages

# explicitly install the JRE before munin-plugins-java so it doesn't pull in
# default-jre (Java 10) on Ubuntu 18.04.
- name: Install Java 8 JRE
  when: ((ansible_distribution == "Ubuntu" and ansible_distribution_version is version('18.04', '=='))
        and ("dspace" in group_names or "solr" in group_names))
  ansible.builtin.package:
    name: openjdk-8-jre-headless
    state: present
  tags: packages

# Some nice things to have on Ubuntu Tomcat servers:
#   - ruby for munin's tomcat checks
#   - libxml-simple-perl for munin's tomcat checks
#   - libdbd-pg-perl for munin's postgres check
#   - munin-plugins-java to monitor Tomcat via JMX
- name: Install munin-node Tomcat deps
  when: (ansible_distribution == "Ubuntu" and ("dspace" in group_names or "solr" in group_names or "postgres" in group_names))
  ansible.builtin.package:
    name: ['ruby', 'libxml-simple-perl', 'libdbd-pg-perl', 'munin-plugins-java']
    state: present
  tags: packages

- name: Configure munin Tomcat plugin
  when: (ansible_distribution == "Ubuntu" and ("dspace" in group_names or "solr" in group_names))
  ansible.builtin.template:
    src: tomcat.conf.j2
    dest: /etc/munin/plugin-conf.d/tomcat
    owner: root
    group: root
    mode: 0640
  notify:
    - restart munin-node

- name: Configure munin DSpace Sessions plugin
  ansible.builtin.copy:
    src: jmx_dspace_sessions
    dest: /etc/munin/plugins/jmx_dspace_sessions
    owner: root
    group: root
    mode: 0755
  when:
    - ansible_distribution == "Ubuntu"
    - '"dspace" in group_names'
  notify:
    - restart munin-node

- name: Enable munin JMX dbpools plugin
  ansible.builtin.file:
    src: /usr/share/munin/plugins/jmx_tomcat_dbpools
    dest: /etc/munin/plugins/jmx_tomcat_dbpools
    state: link
  when:
    - ansible_distribution == "Ubuntu"
    - '"dspace" in group_names'
  notify:
    - restart munin-node

- name: Create munin-node.conf
  ansible.builtin.template:
    src: munin-node.conf.j2
    dest: /etc/munin/munin-node.conf
    mode: 0644
  notify:
    - restart munin-node

# It is not possible to determine if munin-node-configure plans to enable or
# disable any plugins based on its return code. We can only look for lines like
# these in stderr:
#
#   + ln -s /usr/share/munin/plugins/nginx_request /etc/munin/plugins/nginx_request
#   + rm -f /etc/munin/plugins/nginx_status
#
# If we see those then we know something changed and we can notify the handler.
- name: Configure munin-node
  ansible.builtin.shell:
    cmd: munin-node-configure --shell --families=contrib,auto --remove-also | sh -x
  register: munin_node_configure
  changed_when: munin_node_configure.stderr is regex("\+ (ln -s|rm -f).*")
  notify:
    - restart munin-node

- name: Start munin-node
  ansible.builtin.service:
    name: munin-node
    state: started
    enabled: true

# vim: set sw=2 ts=2:

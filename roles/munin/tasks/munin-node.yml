---
- name: Install munin-node
  when: ansible_os_family == "Debian"
  ansible.builtin.package:
    name: munin-node
    state: present
    cache_valid_time: 3600
  tags: packages

- name: Install munin-node
  when: ansible_os_family == "RedHat"
  ansible.builtin.package:
    name: munin-node
    state: present
  tags: packages

# Enable sensors support if this is a bare metal machine. The way we check this
# is to consult ansible_virtualization_role, which always returns "host" if the
# host is bare metal.
- name: Set sensor packages (Red Hat)
  set_fact:
    sensor_packages:
      - lm_sensors # for CPU package and PCI card temperatures
      - hddtemp    # for hard drive temperatures
  when:
    - ansible_virtualization_role == "host"
    - ansible_os_family == "RedHat"
  tags: packages

- name: Set sensor packages (Debian)
  set_fact:
    sensor_packages:
      - lm-sensors
      - hddtemp
  when:
    - ansible_virtualization_role == "host"
    - ansible_os_family == "Debian"
  tags: packages

- name: Install sensor packages
  ansible.builtin.package:
    name: "{{ sensor_packages }}"
    state: present
  when: sensor_packages is defined
  tags: packages

- name: Enable Munin temperature and fan plugins
  ansible.builtin.file:
    src: /usr/share/munin/plugins/sensors_
    dest: "{{ item }}"
    state: link
  loop:
    - /etc/munin/plugins/sensors_fan
    - /etc/munin/plugins/sensors_temp
  when: ansible_virtualization_role == "host"

# some nice things to have for munin-node on Ubuntu (12.04 and 14.04 right now)
# libwww-perl for munin's nginx_status check
- name: Install munin-node deps
  ansible.builtin.package:
    name: libwww-perl
    state: present
  when: ansible_distribution == "Ubuntu"
  tags: packages

# explicitly install the JRE before munin-plugins-java so it doesn't pull in
# default-jre (Java 10) on Ubuntu 18.04.
- name: Install Java 8 JRE
  when: ((ansible_distribution == "Ubuntu" and ansible_distribution_version is version('18.04', '=='))
        and ("dspace" in group_names or "solr" in group_names))
  ansible.builtin.package:
    name: openjdk-8-jre-headless
    state: present
  tags: packages

# some nice things to have on Ubuntu Tomcat servers
- name: Install munin-node Tomcat deps
  when: (ansible_distribution == "Ubuntu" and ("dspace" in group_names or "solr" in group_names or "postgres" in group_names))
  ansible.builtin.package:
    name: "{{ item }}"
    state: present
  loop:
    - ruby # for munin's tomcat checks
    - libxml-simple-perl # for munin's tomcat checks
    - libdbd-pg-perl # for munin's postgres check
    - munin-plugins-java # to monitor Tomcat via JMX
  tags: packages

- name: Configure munin Tomcat plugin
  when: (ansible_distribution == "Ubuntu" and ("dspace" in group_names or "solr" in group_names))
  ansible.builtin.template:
    src: tomcat.conf.j2
    dest: /etc/munin/plugin-conf.d/tomcat
    owner: root
    group: root
    mode: 0640
  notify:
    - restart munin-node

- name: Configure munin DSpace Sessions plugin
  ansible.builtin.copy:
    src: jmx_dspace_sessions
    dest: /etc/munin/plugins/jmx_dspace_sessions
    owner: root
    group: root
    mode: 0755
  when:
    - ansible_distribution == "Ubuntu"
    - '"dspace" in group_names'
  notify:
    - restart munin-node

- name: Enable munin JMX dbpools plugin
  ansible.builtin.file:
    src: /usr/share/munin/plugins/jmx_tomcat_dbpools
    dest: /etc/munin/plugins/jmx_tomcat_dbpools
    state: link
  when:
    - ansible_distribution == "Ubuntu"
    - '"dspace" in group_names'
  notify:
    - restart munin-node

- name: Create munin-node.conf
  ansible.builtin.template:
    src: munin-node.conf.j2
    dest: /etc/munin/munin-node.conf
  notify:
    - restart munin-node

- name: Configure munin-node
  shell: munin-node-configure --shell --families=contrib,auto --remove-also | sh -x
  notify:
    - restart munin-node

- name: Start munin-node
  service:
    name: munin-node
    state: started
    enabled: true

# vim: set sw=2 ts=2:

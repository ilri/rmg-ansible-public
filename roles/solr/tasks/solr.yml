---

- name: Create system group to run Solr daemon
  group: name={{ solr_group }} system=yes

- name: Create system user account to run Solr daemon
  user: name={{ solr_user }} group={{ solr_group }} createhome=yes home={{ solr_user_homedir }} shell=/bin/bash system=yes state=present

- name: Check installed Solr version
  stat:
    path: "{{ solr_install_dir }}"
  register: solr_stat

- name: Get Solr tarball
  get_url:
    url: "{{ solr_mirror_url }}"
    dest: "{{ solr_prefix_dir }}/{{ solr_tarball }}"
    checksum: "sha256:{{ solr_sha256sum }}"
  when: solr_stat.stat.exists is False
  register: get_url_result

- name: Unpack Solr tarball
  unarchive:
    src: "{{ solr_prefix_dir }}/{{ solr_tarball }}"
    dest: "{{ solr_prefix_dir }}"
    creates: "{{ solr_install_dir }}"
    owner: "{{ solr_user }}"
    group: "{{ solr_group }}"
    remote_src: yes
  when: get_url_result is changed

- name: Create Solr data & log dirs
  file: path={{ item }} owner={{ solr_user }} group={{ solr_group }} state=directory
  loop:
    - "{{ solr_home_dir }}/data"
    - "{{ solr_home_dir }}/logs"

- name: Copy Solr init.d service file
  template: src=init.d-solr.j2 dest=/etc/init.d/solr owner=root group=root mode=0755
  when: ansible_service_mgr != 'systemd'

- name: Copy systemd service unit
  template: src=solr.service.j2 dest=/etc/systemd/system/solr.service mode=0644 owner=root group=root
  when: ansible_service_mgr == 'systemd'
  register: solr_systemd_service

# need to reload to pick up service/timer/environment changes
- name: Reload systemd daemon
  systemd: daemon_reload=yes
  when: solr_systemd_service is changed

- name: Copy solr.xml config files
  command: /usr/bin/rsync -a "{{ solr_install_dir }}/server/solr/solr.xml" "{{ solr_home_dir }}/data/" creates="{{ solr_home_dir }}/data/solr.xml"

- name: Copy Solr environment
  template: src=solr.in.sh.j2 dest={{ solr_home_dir }}/solr.in.sh owner={{ solr_user }} group={{ solr_group }} mode=0755
  notify: restart solr

- name: Reconfigure Solr logging
  copy: src=log4j.properties dest="{{ solr_home_dir }}/log4j.properties" owner={{ solr_user }} group={{ solr_group }} mode=0644
  notify: restart solr

- name: Start & enable Solr service
  service: name=solr state=started enabled=yes

- name: Configure Solr cores
  include_tasks: solr-cores.yml
  become_user: "{{ solr_user }}"
  when: solr_cores is defined
  tags: solr-cores

# vim: set ts=2 sw=2:

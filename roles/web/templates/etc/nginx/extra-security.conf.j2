# The X-Frame-Options header indicates whether a browser should be allowed
# to render a page within a frame or iframe.
add_header X-Frame-Options SAMEORIGIN always;
 
# MIME type sniffing security protection
#	There are very few edge cases where you wouldn't want this enabled.
add_header X-Content-Type-Options nosniff always;

# Always send referrer, as long as the scheme is not downgraded.
# See: https://scotthelme.co.uk/a-new-security-header-referrer-policy/
add_header Referrer-Policy no-referrer-when-downgrade always;
 
# with Content Security Policy (CSP) enabled (and a browser that supports it (http://caniuse.com/#feat=contentsecuritypolicy),
# you can tell the browser that it can only download content from the domains you explicitly allow
# CSP can be quite difficult to configure, and cause real issues if you get it wrong
# There is website that helps you generate a policy here http://cspisawesome.com/
# add_header Content-Security-Policy "default-src 'self'; style-src 'self' 'unsafe-inline'; script-src 'self' https://www.google-analytics.com;" always;

{% if nginx_enable_hsts == True %}
# Enable this if you want HSTS (recommended, but be careful)
add_header Strict-Transport-Security max-age={{ hsts_maxage }} always;
{% endif %} {# end: nginx_enable_hsts #}
